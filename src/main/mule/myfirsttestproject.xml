<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
      xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties"
      xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
      http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
      http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd
      http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">

    <!-- Import global configurations -->
    <import file="global.xml" />

    <!-- Main flow with improved structure and best practices -->
    <flow name="doItAll" doc:name="Process API Request">
        <http:listener path="${http.listener.path}" config-ref="HTTP_Listener_config" doc:name="HTTP Listener">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>

        <!-- Initialize payload with proper structure -->
        <set-payload value="{'name':'user', 'ord': 'none'}" doc:name="Initialize Payload"/>

        <!-- Validate payload structure -->
        <validation:is-not-null doc:name="Validate Payload" value="#[payload]" message="Payload cannot be null"/>

        <!-- Transform using external DWL file -->
        <ee:transform doc:name="Transform Payload" doc:id="209452dd-65dd-4d5d-999b-1f14060462e7">
            <ee:message>
                <ee:set-payload resource="dwl/transform-payload.dwl"/>
            </ee:message>
        </ee:transform>

        <!-- Proper logging without sensitive data -->
        <logger level="INFO" doc:name="Log Request" message="Calling external API with correlation ID: #[correlationId]" category="com.mycompany.api"/>

        <!-- Set request headers -->
        <set-variable variableName="requestHeaders" value="#[{'Content-Type': 'application/json', 'Accept': 'application/json'}]" doc:name="Set Request Headers"/>

        <!-- Make HTTP request with proper error handling -->
        <try doc:name="Try">
            <http:request method="${http.request.method}" url="${http.request.url}" config-ref="HTTP_Request_configuration" doc:name="Call External API">
                <http:headers>#[vars.requestHeaders]</http:headers>
            </http:request>
            <error-handler>
                <on-error-propagate type="HTTP:CONNECTIVITY">
                    <set-variable variableName="httpStatus" value="503" doc:name="Set Status 503"/>
                    <set-payload value="#[{'status': 'error', 'message': 'External service unavailable', 'code': 'SERVICE_UNAVAILABLE'}]" doc:name="Service Unavailable Message"/>
                    <logger level="ERROR" doc:name="Log Connectivity Error" message="Connectivity error: #[error.description]" category="com.mycompany.error"/>
                </on-error-propagate>
                <on-error-propagate type="HTTP:BAD_REQUEST">
                    <set-variable variableName="httpStatus" value="400" doc:name="Set Status 400"/>
                    <set-payload value="#[{'status': 'error', 'message': 'Bad request', 'code': 'BAD_REQUEST'}]" doc:name="Bad Request Message"/>
                    <logger level="WARN" doc:name="Log Bad Request" message="Bad request: #[error.description]" category="com.mycompany.error"/>
                </on-error-propagate>
                <on-error-propagate type="ANY">
                    <set-variable variableName="httpStatus" value="500" doc:name="Set Status 500"/>
                    <set-payload value="#[{'status': 'error', 'message': 'Internal server error', 'code': 'INTERNAL_ERROR'}]" doc:name="Internal Error Message"/>
                    <logger level="ERROR" doc:name="Log General Error" message="Error occurred: #[error.description]" category="com.mycompany.error"/>
                </on-error-propagate>
            </error-handler>
        </try>

        <!-- Set success response -->
        <set-payload value="#[{'status': 'done', 'message': 'ok'}]" doc:name="Set Success Response"/>
        <set-variable variableName="httpStatus" value="200" doc:name="Set Status 200"/>
        <logger level="INFO" doc:name="Log Response" message="Request processed successfully" category="com.mycompany.api"/>
    </flow>
</mule>